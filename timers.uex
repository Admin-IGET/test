<!DOCTYPE html>
<html lang="cs">
<head>
  <meta charset="UTF-8" />
  <title>UEXFILE</title>
  <style>
    body { font-family: Arial, sans-serif; padding: 20px; background: #f0f0f0; }
    h1, h2 { text-align: center; }
    .timer-container {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      justify-content: center;
      margin-top: 20px;
    }
    .timer {
      background: white;
      padding: 15px;
      border-radius: 0;
      width: 200px;
      text-align: center;
      box-shadow: 0 2px 5px rgba(0,0,0,0.2);
      position: relative;
    }
    input[type="number"], input[type="text"] {
      width: 60px;
      margin: 5px;
    }
    .label-input {
      width: 90%;
      margin-bottom: 10px;
    }
    button {
      padding: 5px 10px;
      margin: 5px;
      background-color: blue;
      color: white;
      border: none;
      cursor: pointer;
    }
    .timer input[type="number"], .timer input[type="text"] {
      border: 1px solid #999;
      border-radius: 0;
      padding: 5px;
      font-size: 14px;
      outline: none;
      box-sizing: border-box;
      transition: border-color 0.3s;
    }
    .label-input {
      width: calc(100% - 10px);
      margin: 5px;
      border: 1px solid #999;
      border-radius: 0;
      padding: 5px;
      font-size: 16px;
      box-sizing: border-box;
      outline: none;
      transition: border-color 0.3s;
    }
    .label-input:focus, .timer input:focus {
      border-color: #0044cc;
    }
    .close-btn {
      position: absolute;
      top: 5px;
      right: 5px;
      background-color: red;
      border: none;
      color: white;
      cursor: pointer;
      padding: 2px 6px;
    }
    #langToggle {
      display: block;
      margin: 20px auto;
      background-color: green;
    }
  </style>
</head>
<body>

<h1 id="mainTitle"></h1>

<div class="timer-container" id="timers"></div>

<div style="text-align: center; margin-top: 20px;">
  <button id="addTimerBtn" onclick="addTimer()"></button>
</div>

<div style="text-align: center;">
  <button id="langToggle" onclick="toggleLanguage()"></button>
</div>

<script>
  let lang = localStorage.getItem('language');
  if (lang !== 'cz' && lang !== 'en') {
    lang = 'cz';
    localStorage.setItem('language', 'cz');
  }
  let isCzech = lang === 'cz';
  const timers = [];

  function applyLanguageStatic() {
    document.getElementById('mainTitle').textContent = isCzech ? 'Časovače' : 'Timers';
    document.getElementById('addTimerBtn').textContent = isCzech ? 'Přidat časovač' : 'Add Timer';
    document.getElementById('langToggle').textContent = isCzech ? 'English' : 'Česky';
    document.documentElement.lang = isCzech ? 'cs' : 'en';

    for (const timerId of timers) {
      const timerDiv = document.getElementById(timerId);
      if (!timerDiv) continue;
      const labelInput = timerDiv.querySelector('.label-input');
      const minInput = document.getElementById(`${timerId}Min`);
      const secInput = document.getElementById(`${timerId}Sec`);
      const button = document.getElementById(`${timerId}Btn`);
      const display = document.getElementById(`${timerId}Display`);

      if (labelInput) labelInput.placeholder = isCzech ? "Název časovače..." : "Timer name...";
      if (minInput) minInput.placeholder = isCzech ? "Min" : "Min";
      if (secInput) secInput.placeholder = isCzech ? "Sek" : "Sec";

      if (display && display.textContent !== (isCzech ? "ČAS VYPRŠEL!" : "TIME'S UP!")) {
        button.textContent = isCzech ? "Start" : "Start";
        button.onclick = () => startTimer(timerId);
      }

      if (display && (display.textContent === "ČAS VYPRŠEL!" || display.textContent === "TIME'S UP!")) {
        display.textContent = isCzech ? "ČAS VYPRŠEL!" : "TIME'S UP!";
        button.textContent = isCzech ? "Zastavit alarm" : "Stop Alarm";
        button.onclick = () => {
          stopBeeping();
          removeTimer(timerId);
        };
        button.disabled = false;
      }
    }
  }

  applyLanguageStatic();

  function toggleLanguage() {
    isCzech = !isCzech;
    localStorage.setItem('language', isCzech ? 'cz' : 'en');
    applyLanguageStatic();
  }

  const MAX_TIMERS = 10;
  let timerCount = 0;
  const timersContainer = document.getElementById('timers');

  function addTimer() {
    if (timerCount >= MAX_TIMERS) {
      alert(isCzech ? "Můžete mít maximálně 10 časovačů." : "You can only have up to 10 timers.");
      return;
    }

    const timerId = `timer${timerCount}`;
    timers.push(timerId);
    const timerDiv = document.createElement('div');
    timerDiv.className = 'timer';
    timerDiv.id = timerId;

    timerDiv.innerHTML = `
      <button class="close-btn" onclick="stopBeeping(); removeTimer('${timerId}')">X</button>
      <input type="text" class="label-input" style="width: 160px;" placeholder="${isCzech ? "Název časovače..." : "Timer name..."}" />
      <p></p>
      <input type="number" placeholder="${isCzech ? "Min" : "Min"}" min="0" id="${timerId}Min">
      <input type="number" placeholder="${isCzech ? "Sek" : "Sec"}" min="0" max="59" id="${timerId}Sec">
      <br>
      <button id="${timerId}Btn" onclick="startTimer('${timerId}')">${isCzech ? "Start" : "Start"}</button>
      <p id="${timerId}Display">00:00</p>
    `;
    timersContainer.appendChild(timerDiv);
    timerCount++;
  }

  function removeTimer(timerId) {
    const timer = document.getElementById(timerId);
    if (timer) timer.remove();
  }

  let beepInterval;
  let audioCtx;

  function startBeeping() {
    audioCtx = new (window.AudioContext || window.webkitAudioContext)();
    beepInterval = setInterval(() => {
      const oscillator = audioCtx.createOscillator();
      const gainNode = audioCtx.createGain();

      oscillator.connect(gainNode);
      gainNode.connect(audioCtx.destination);

      oscillator.type = 'square';
      oscillator.frequency.setValueAtTime(1000, audioCtx.currentTime);
      gainNode.gain.setValueAtTime(0.2, audioCtx.currentTime);

      oscillator.start();
      setTimeout(() => oscillator.stop(), 500);
    }, 1000);
  }

  function stopBeeping() {
    clearInterval(beepInterval);
    if (audioCtx) audioCtx.close();
  }

	function startTimer(timerId) {
	  const minInput = document.getElementById(`${timerId}Min`);
	  const secInput = document.getElementById(`${timerId}Sec`);
	  const display = document.getElementById(`${timerId}Display`);
	  const button = document.getElementById(`${timerId}Btn`);

	  let minutes = parseInt(minInput.value) || 0;
	  let seconds = parseInt(secInput.value) || 0;
	  let totalSeconds = minutes * 60 + seconds;

	  if (totalSeconds <= 0) {
		alert(isCzech ? "Zadejte platný čas." : "Enter a valid time.");
		return;
	  }

	  minInput.disabled = true;
	  secInput.disabled = true;
	  button.disabled = true;

	  const endTime = Date.now() + totalSeconds * 1000;

	  const interval = setInterval(() => {
		let remaining = Math.round((endTime - Date.now()) / 1000);

		if (remaining < 0) remaining = 0;

		let min = Math.floor(remaining / 60);
		let sec = remaining % 60;
		display.textContent = `${min.toString().padStart(2, '0')}:${sec.toString().padStart(2, '0')}`;

		if (remaining <= 0) {
		  clearInterval(interval);
		  display.textContent = isCzech ? "ČAS VYPRŠEL!" : "TIME'S UP!";
		  startBeeping();

		  button.textContent = isCzech ? "Zastavit alarm" : "Stop Alarm";
		  button.onclick = () => {
			stopBeeping();
			removeTimer(timerId);
		  };
		  button.disabled = false;
		}
	  }, 250); 
	}
</script>

</body>
</html>
